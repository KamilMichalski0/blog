---
interface Props {
  title: string;
  description?: string;
  pubDate: Date;
  heroImage?: string;
  href: string;
  tags?: string[];
  draft?: boolean;
}

const { title, description, pubDate, heroImage, href, tags = [], draft = false } = Astro.props;

const formattedDate = new Date(pubDate).toLocaleDateString('pl-PL', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

// Calculate reading time (rough estimate: 200 words per minute)
const readingTime = description ? Math.ceil(description.split(' ').length / 200) : 3;
---

<article class="group h-full">
  <a href={href} class="block h-full">
    <div class="card h-full flex flex-col overflow-hidden">
      {heroImage ? (
        <div class="relative aspect-video overflow-hidden">
          <img
            src={heroImage}
            alt={title}
            class="w-full h-full object-cover transform group-hover:scale-110 transition-transform duration-500"
            loading="lazy"
          />
          <!-- Gradient overlay for better text readability if needed -->
          <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>

          {draft && (
            <div class="absolute top-4 right-4">
              <span class="badge badge-warning shadow-lg">Szkic</span>
            </div>
          )}
        </div>
      ) : (
        <!-- Beautiful gradient placeholder if no image -->
        <div class="relative aspect-video overflow-hidden" style="background: var(--gradient-hero);">
          <div class="absolute inset-0 flex items-center justify-center">
            <svg class="w-16 h-16 text-white/30" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
            </svg>
          </div>
          {draft && (
            <div class="absolute top-4 right-4">
              <span class="badge badge-warning shadow-lg">Szkic</span>
            </div>
          )}
        </div>
      )}

      <div class="p-6 flex-1 flex flex-col">
        <div class="flex items-center justify-between mb-3 text-sm">
          <time class="flex items-center text-gray-600 dark:text-gray-400 font-medium">
            <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            {formattedDate}
          </time>
          <span class="flex items-center text-gray-600 dark:text-gray-400 font-medium">
            <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            {readingTime} min czytania
          </span>
        </div>

        <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 line-clamp-2 transition-colors" style="--hover-color: rgb(var(--color-accent));">
          {title}
        </h3>
        <style>
          h3:hover {
            color: var(--hover-color) !important;
          }
        </style>

        {description && (
          <p class="text-gray-700 dark:text-gray-300 line-clamp-3 mb-4 flex-1 leading-relaxed">
            {description}
          </p>
        )}

        <div class="mt-auto">
          {tags.length > 0 && (
            <div class="flex flex-wrap gap-2 mb-4">
              {tags.slice(0, 3).map(tag => (
                <span class="badge badge-primary hover:scale-110 transition-transform cursor-pointer">
                  {tag}
                </span>
              ))}
              {tags.length > 3 && (
                <span class="badge bg-gray-200 text-gray-700 dark:bg-gray-700 dark:text-gray-300">
                  +{tags.length - 3}
                </span>
              )}
            </div>
          )}

          <div class="flex items-center font-semibold group-hover:gap-2 transition-all" style="color: rgb(var(--color-accent));">
            Czytaj wiÄ™cej
            <svg class="w-5 h-5 ml-1 transform group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
            </svg>
          </div>
        </div>
      </div>
    </div>
  </a>
</article>