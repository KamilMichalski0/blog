---
interface Props {
  title: string;
  description?: string;
  pubDate: Date;
  heroImage?: string;
  href: string;
  tags?: string[];
  draft?: boolean;
}

const { title, description, pubDate, heroImage, href, tags = [], draft = false } = Astro.props;

const formattedDate = new Date(pubDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});
---

<article class="card hover:scale-[1.02] transition-transform duration-200">
  <a href={href} class="block">
    {heroImage && (
      <div class="aspect-video overflow-hidden rounded-t-xl">
        <img
          src={heroImage}
          alt={title}
          class="w-full h-full object-cover"
          loading="lazy"
        />
      </div>
    )}
    <div class="p-6">
      <div class="flex items-center justify-between mb-2">
        <time class="text-sm text-gray-500 dark:text-gray-400">
          {formattedDate}
        </time>
        {draft && (
          <span class="badge badge-warning">Draft</span>
        )}
      </div>

      <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-2 line-clamp-2">
        {title}
      </h3>

      {description && (
        <p class="text-gray-600 dark:text-gray-400 line-clamp-3 mb-4">
          {description}
        </p>
      )}

      {tags.length > 0 && (
        <div class="flex flex-wrap gap-2">
          {tags.map(tag => (
            <span class="badge badge-primary">
              {tag}
            </span>
          ))}
        </div>
      )}
    </div>
  </a>
</article>